module float_to_dac (




    input  logic signed [23:0] signal_in,  // 24-bit fixed point (1 sign, 7 int, 16 frac)
    input  logic [7:0] dac_max_value,          // 8-bit DAC max value (e.g., 255)
    input  logic [23:0] v_ref,                 // 16-bit fixed-point V_REF in Q8.8 format
    input  logic signed [23:0] offset,         // 24-bit fixed-point OFFSET in Q7.16 format
    output logic [7:0] dac_value               // 8-bit DAC output
);

    // Internal signals
    logic signed [23:0] signal_with_offset;   // Signal after applying offset
    logic [31:0] scaled_signal;               // Scaled signal for DAC calculation

    // Apply OFFSET
    always_comb begin
        signal_with_offset = signal_value + offset;

        // Clamp to 0 - V_REF range
        if (signal_with_offset < 0) begin
            signal_with_offset = 0;
        end else if (signal_with_offset > {8'b0, v_ref, 8'b0}) begin
            signal_with_offset = {8'b0, v_ref, 8'b0};  // V_REF shifted to Q7.16 format
        end

        // Convert to DAC value
        // (signal_with_offset / V_REF) * DAC_MAX_VALUE
        scaled_signal = (signal_with_offset * dac_max_value) >> 16;

        // Assign the scaled signal to the DAC output
        dac_value = scaled_signal[7:0];
    end

endmodule
